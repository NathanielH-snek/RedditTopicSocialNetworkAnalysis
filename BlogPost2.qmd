---
title: "BlogPost#2"
format: 
  docx:
    toc: true
    toc-depth: 2
    toc-title: Contents
    toc-location: left
    code-fold: false
    html-math-method: katex
    theme: flatly
    smooth-scroll: true
    link-external-icon: true
    link-external-newwindow: true
    citations-hover: true
    footnotes-hover: true
    font-size: 80%
editor: source
---

# Initial Exploration

The beginning focuses primarily on visualization, with some small attention to inherent network attributes. So let's get that network graph first!

Load in the data
```{r}
rm(list=ls())

#MacOSPaths
redditData <- read.csv("~/Documents/School/695N/NetworkAnalysisFinalProject/Data/edgelist.csv")
nodeAttr <- read.csv("~/Documents/School/695N/NetworkAnalysisFinalProject/Data/nodeattr.csv")

set.seed(69)
#LinuxPaths
#redditData <- read.csv("~/Developer/NetworkAnalysisFinal-master/Data/edgelist.csv")
#nodeAttr <- read.csv("~/Developer/NetworkAnalysisFinal-master/Data/nodeattr.csv")
```

Let's get some really basic descriptives
```{r}
library(glue)
library(dplyr)
library(igraph)
library(GGally)
library(network)
library(bipartite)
library(ggraph)
library(tidygraph)
library(dplyr)
library(RColorBrewer)
```

```{r}
glue('Number of Entries: {dim(redditData)[1]}')
glue('Number of Unique Mods: {sum(nodeAttr$Type == "mod")}')
glue('Number of Subreddits: {sum(nodeAttr$Type == "sub")}')
```

There's about a couple thousand subreddits that were

Trying the igraph way
```{r}
reddit.ig <- graph_from_data_frame(
  redditData,
  directed = F
)
reddit.ig
```

```{r}
nodeAttr <- nodeAttr[match(V(reddit.ig)$name, nodeAttr$Name), ]
sumData <- summary(nodeAttr$SubscriberCount)
min <- sumData['Min.']
q1 <- sumData['1st Qu.']
median <- sumData['Median']
q3 <- sumData['3rd Qu.']
max <- sumData['Max.']

nodeAttr <- nodeAttr %>%
  mutate(Size = case_when(
    SubscriberCount < q1 ~ 'tiny',
    SubscriberCount >= q1 & SubscriberCount < median ~ 'small',
    SubscriberCount >= median & SubscriberCount < q3 ~ 'medium',
    SubscriberCount >= q3 ~ 'large'
  )
)
V(reddit.ig)$type <- nodeAttr$Type
V(reddit.ig)$category <- nodeAttr$Category
V(reddit.ig)$subcount <- nodeAttr$SubscriberCount
V(reddit.ig)$nummods <- nodeAttr$NumberOfModerators
V(reddit.ig)$orgsize <- nodeAttr$Size
reddit.ig
```

```{r}
V(reddit.ig)$shape <- ifelse(V(reddit.ig)$type == "mod", "circle","triangle")
V(reddit.ig)$color <- ifelse(V(reddit.ig)$type == "mod", "blue","red")
V(reddit.ig)$vertexlabel <- ifelse(V(reddit.ig)$type == "mod", "", V(reddit.ig)$name)
```

```{r}
ggraph(reddit.ig, 'igraph', algorithm = 'tree') +
  geom_node_point(aes(colour=V(reddit.ig)$category, shape = V(reddit.ig)$shape), show.legend = F) +
  #geom_node_label(data = V(reddit.ig)$vertexlabel)
  geom_edge_diagonal()
```

```{r}
#ggraph(reddit.ig, layout = 'fr', niter=1000) +
ggraph(reddit.ig, 'igraph', algorithm = 'tree') +
  geom_node_point(aes(colour=V(reddit.ig)$category, shape = V(reddit.ig)$shape), show.legend = T)+
  #geom_node_label(data = V(reddit.ig)$vertexlabel)
  geom_edge_diagonal() +
  theme(
    legend.position = "right", 
    legend.key.size = unit(0.5, "cm")
  ) +
  guides(
    shape = "none"
  )
```


```{r}
ggraph(reddit.ig, layout = 'fr', niter=1000) +
#ggraph(reddit.ig, 'igraph', algorithm = 'tree') +
  geom_node_point(aes(colour=V(reddit.ig)$category, shape = V(reddit.ig)$shape), show.legend = F)+
  #geom_node_label(data = V(reddit.ig)$vertexlabel)
  geom_edge_link()
```

```{r}
degrees <- igraph::degree(reddit.ig)

# Identify vertices to keep (degree > 2)
verticesToKeep <- V(reddit.ig)[degrees > 2]

# Create a new graph with only the vertices that have more than 2 connections
filteredGraph <- subgraph(reddit.ig, verticesToKeep)

filteredGraph <- igraph::delete.vertices(filteredGraph,igraph::degree(filteredGraph) == 0)

ggraph(filteredGraph, layout = 'kk') +
#ggraph(reddit.ig, 'igraph', algorithm = 'tree') +
  geom_node_point(aes(colour=V(filteredGraph)$category, shape = V(filteredGraph)$shape), show.legend = F)+
  #geom_node_label(data = V(reddit.ig)$vertexlabel)
  geom_edge_fan(aes(show.legend = F))
```

As it turns out graphing this network is incredibly difficult. Getting any sort of graphs to work effectively is a slow process, with disappointing results often. Statnet could not load anything into memory.GGnet seems to work fairly well, but the kk layout which normaly isn't as clustered consumes too much memory (maybe there's a trick to this?) The good news is after a lot of fiddling I have a cleaned dataset, and have figured out generally how to make all the node attributes and my edgelist play together nicely. Unfortuantely there isn't a more tangible result for the amount of different layouts and algorithms that were tried so far except some really grouped graphs. An alternative solution would also be to truncate my dataset but this likely wouldn't be as insightful. Based on my current albeit hard to interpret graphs there does seem to be some tangible patterns that need to be explored. There are definitely some group clusters. 

```{r}
ggraph(filteredGraph, 'igraph', algorithm = 'tree') +
  geom_node_point(aes(colour=V(filteredGraph)$category, shape = V(filteredGraph)$shape), show.legend = F) +
  #geom_node_label(data = V(reddit.ig)$vertexlabel)
  geom_edge_diagonal()
```
It looks like the data is quite messy overall from basic visualization. Instead of doing some actual analysis on the current two mode network, and since I lack node attributes for moderators, lets just use a one mode network of just the subreddits since that's what we're interested in primarily anyway. 
```{r}
redditTypeAdj.ig <- reddit.ig
V(redditTypeAdj.ig)$type <- ifelse(V(redditTypeAdj.ig)$type == "sub", TRUE, FALSE)

redditProj.ig <- bipartite_projection(
  redditTypeAdj.ig,
)
redditSubsProj.ig <- redditProj.ig$proj2
redditSubsProj.ig
```
Ok lets try plotting our shiny new one mode network
```{r}
ggnet2(
  redditSubsProj.ig,
  node.size = 1,
  node.color = "orgsize",
  palette = "Dark2"
  ) +
  guides(
    #color = FALSE, 
    size = FALSE
)
```
Well that looks slightly more interesting, lets remove isolates and also size nodes by their degree.
```{r}
ggnet2(
  redditSubsProj.ig,
  mode = 'kamadakawai',
  node.color = "orgsize",
  palette = "Dark2",
  size.min = 1,
  size = 'degree',
  ) +
  guides(
    #color = FALSE, 
    size = FALSE
)
```
Turns out there are 2850 isolates out of 6916 subreddits, that's interesting. I wonder what is causing this. Perhaps community detection will provide some insight. Just a little more fun with visualization.

```{r}
ggraph(redditSubsProj.ig, 'igraph', algorithm = 'tree') +
  geom_node_point(aes(colour=V(redditSubsProj.ig)$category, shape = V(redditSubsProj.ig)$size)) +
  #geom_node_label(data = V(reddit.ig)$vertexlabel)
  geom_edge_diagonal() +
  guides(
    color = FALSE
  )
```

Ok lets actually get some network metrics, after all visualization can only get us so far.
```{r}
#Clean unneeded attribute
redditSubsProj.ig <- delete_vertex_attr(redditSubsProj.ig, 'shape')
#Component information
compdata <- igraph::components(redditSubsProj.ig)
compdata$no
```

```{r}
summary(compdata$csize)
```

```{r}
#Unique Component Sizes
unique(compdata$csize)
```

```{r}
#Degree stats
summary(igraph::degree(redditSubsProj.ig))
```
## Community Detection
I've chosen the walktrap algorithm primarily because it handles weights well and the network is weighted. 
```{r}
redditWalktrap <- cluster_walktrap(
  redditSubsProj.ig,
  weights = V(redditSubsProj.ig)$weight
)
redditWalktrap
```
Well that's certainly more communities than my proposed. Note the modularity of 0.51 Let's try a larger step value.

```{r}
redditWalktrap2 <- cluster_walktrap(
  redditSubsProj.ig,
  weights = V(redditSubsProj.ig)$weight,
  steps = 10
)
redditWalktrap2
```

Interestingly that did reduce the number of communities but didn't significantly change the modularity as it increased by 0.01. Lets do a little plot.

```{r}
V(redditSubsProj.ig)$wt <- redditWalktrap$membership


mean(sizes(redditWalktrap))
median(sizes(redditWalktrap))
```

```{r}
plot(
  redditWalktrap,
  redditSubsProj.ig,
  vertex.size = 1,
  vertex.label = NA,
  layout = layout_with_kk
)
```
Fun! It's of course quite messy. I need to try to plot this without communities that are singular, but I need to figure out how to do this in R. Let's try just subsetting the graph by removing nodes that have a degree less than one 
```{r}
V(redditSubsProj.ig)$degree <- igraph::degree(redditSubsProj.ig)
redditSubgraph.ig <- induced_subgraph(redditSubsProj.ig,V(redditSubsProj.ig)$degree > 2)
```
Ok now a quick plot of the subgraph
```{r}
ggnet2(
  redditSubgraph.ig,
  node.color = "orgsize",
  palette = "Dark2",
  size.min = 1,
  size = 'degree',
  ) +
  guides(
    #color = FALSE, 
    size = FALSE
)
```
```{r}
redditSubWalktrap <- cluster_walktrap(
  redditSubgraph.ig,
  weights = V(redditSubgraph.ig)$weight
)
redditSubWalktrap

V(redditSubgraph.ig)$wt <- redditSubWalktrap$membership
```
```{r}
plot(
  redditSubWalktrap,
  redditSubgraph.ig,
  vertex.size = 1,
  vertex.label = NA,
  layout = layout_with_kk
)
```

# Block Detection
TODO
```{r}
redditSubBlock <- cohesive_blocks(redditSubgraph.ig)
plot(redditSubBlock)
```